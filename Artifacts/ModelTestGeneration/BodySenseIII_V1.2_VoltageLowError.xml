<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>// Place global declarations here.
const int N = 22;
const int NRSCENARIO = 88;

const int NOTFOUND = -1;

typedef int[1, N] id_t;
typedef int[1, NRSCENARIO] scen_t;

const int UNDEFINED = 0;

typedef int[0,2] QualificationType;
const QualificationType STANDARD = 1;
const QualificationType IMMEDIATE = 2;

const id_t VoltageLowError = 1;
const id_t VoltageHighError = 2;
const id_t RAMError = 3;
const id_t ROMError = 4;
const id_t NVMCRCError = 5;
const id_t WatchdogResetError = 6;
const id_t DiscardError = 7;
const id_t CalibrationNotLearnError = 8;
const id_t BuildCheckNotRunError = 9;
const id_t BuildCheckError = 10;
const id_t NVMAccessError = 11;
const id_t SeatFrameConnectionError = 12;
const id_t SeatHeaterCircuitIntegrityError = 13;
const id_t CableShieldError = 14;
const id_t TemperatureSensorError = 15;
const id_t InternalMeasurementPathError = 16;
const id_t MeasurementSensePathError = 17;
const id_t TemperatureRangeError = 18;
const id_t TemperatureRangeLimitError = 19;
const id_t MeasurementRangeError = 20;
const id_t CalibrationDataError = 21;
const id_t ShortToUbatGndError = 22;

const int EXE_TIME = 1700;
const int STANDARD_QUALIFICATION_TIME = 3100;
const int STANDARD_DEQUALIFICATION_TIME = 6500;
const int IMMEDIATE_QUALIFICATION_TIME = 3100;
const int IMMEDIATE_DEQUALIFICATION_TIME = 3100;

typedef int[0,9] Priority;

typedef struct {
    bool isDetected;
    bool isQualified;
    QualificationType type;
    int qualificationCounter;
    Priority pri;
} error_state;

meta error_state Errors[id_t] = {
{false,false,STANDARD,0,6},
{false,false,STANDARD,0,8},
{false,false,STANDARD,0,8},
{false,false,STANDARD,0,8},
{false,false,STANDARD,0,8},
{false,false,STANDARD,0,8},
{false,false,STANDARD,0,8},
{false,false,STANDARD,0,8},
{false,false,STANDARD,0,8},
{false,false,STANDARD,0,8},
{false,false,STANDARD,0,8},
{false,false,STANDARD,0,8},
{false,false,STANDARD,0,8},
{false,false,STANDARD,0,8},
{false,false,STANDARD,0,8},
{false,false,STANDARD,0,8},
{false,false,STANDARD,0,8},
{false,false,STANDARD,0,8},
{false,false,STANDARD,0,8},
{false,false,STANDARD,0,8},
{false,false,STANDARD,0,8},
{false,false,STANDARD,0,8}
};

typedef struct {
  int[0,N] length;
  error_state element[N+1];
} array_t;

array_t pendingList;

chan qualify, dequalify;

broadcast chan resume;

clock global_timer;

clock scen;

bool scenarioExe;

chan  CarInfo, AirbagInfo, ControlRequest;

chan clearDTC_message, detected, unDetected;

broadcast chan scenario;
chan s[scen_t];

QualificationType getQualificationType(id_t id) {
    return Errors[id].type;
}


</declaration>
	<template>
		<name>SYS_Message_Receiver</name>
		<location id="id0" x="0" y="0">
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id0"/>
			<label kind="synchronisation" x="-42" y="76">CarInfo?</label>
			<nail x="42" y="68"/>
			<nail x="-25" y="68"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id0"/>
			<label kind="synchronisation" x="93" y="-8">AirbagInfo?</label>
			<nail x="76" y="-25"/>
			<nail x="76" y="25"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id0"/>
			<label kind="synchronisation" x="-51" y="-119">ControlRequest?</label>
			<nail x="-25" y="-93"/>
			<nail x="34" y="-93"/>
		</transition>
	</template>
	<template>
		<name>ENV_Message</name>
		<declaration>clock x;</declaration>
		<location id="id1" x="-102" y="-25">
			<committed/>
		</location>
		<location id="id2" x="-348" y="-25">
		</location>
		<init ref="id2"/>
		<transition>
			<source ref="id2"/>
			<target ref="id1"/>
			<label kind="guard" x="-246" y="-119">x &gt; 40</label>
			<label kind="synchronisation" x="-280" y="-136">AirbagInfo!</label>
			<label kind="testcode">//{type:"MESSAGE"}
sendMessage("{"
 + "\"message\":\"AirbagInfo\","
 + "\"parameters\":$(parameters),"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
			<nail x="-340" y="-102"/>
			<nail x="-110" y="-102"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id1"/>
			<label kind="guard" x="-246" y="-85">x &gt; 40</label>
			<label kind="synchronisation" x="-280" y="-102">CarInfo!</label>
			<label kind="testcode">//{type:"MESSAGE"}
sendMessage("{"
+"\"message\":\"CarInfo\","
+ "\"parameters\":$(parameters),"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
			<nail x="-323" y="-68"/>
			<nail x="-127" y="-68"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id2"/>
			<label kind="assignment" x="-229" y="25">x = 0</label>
			<nail x="-212" y="17"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id1"/>
			<label kind="guard" x="-246" y="-42">x &gt; 40</label>
			<label kind="synchronisation" x="-280" y="-59">ControlRequest!</label>
			<label kind="testcode">//{type:"MESSAGE"}
sendMessage("{"
 +"\"message\":\"ControlRequest\","
+ "\"parameters\":$(parameters),"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name x="5" y="5">Error</name>
		<parameter>id_t id</parameter>
		<declaration>// Place local declarations here
clock x;

bool e0 = false, e1 = false, e2 = false, e3 = false, e4 = false, e5 = false;

bool isDetected(id_t id) {
    return Errors[id].isDetected == true;
}

bool isUnDetected(id_t id) {
    return Errors[id].isDetected == false;
}

void setDetected(id_t id) {
    Errors[id].isDetected = true;
}

void setUnDetected(id_t id) {
    Errors[id].isDetected = false;
}

void setQualified(id_t id) {
    Errors[id].isQualified = true;
}

void setDeQualified(id_t id) {
    Errors[id].isQualified = false;
}

int qualificationTime(id_t id) {
    if(getQualificationType(id) == STANDARD)
        return STANDARD_QUALIFICATION_TIME;
    return IMMEDIATE_QUALIFICATION_TIME;
}

int dequalificationTime(id_t id) {
    if(getQualificationType(id) == STANDARD)
        return STANDARD_DEQUALIFICATION_TIME;
    return IMMEDIATE_DEQUALIFICATION_TIME;
}



</declaration>
		<location id="id3" x="-153" y="229">
			<name x="-212" y="254">NotDetectedQualified</name>
			<label kind="invariant" x="-348" y="229">x &lt;= dequalificationTime(id)</label>
			<label kind="testcodeEnter">verify("{"
  + "\"instance\": \"this\","
  + "\"variables\": ["
  + "{\"name\":\"Detected\", \"value\":false},"
  + "{\"name\":\"Qualified\",\"value\":true}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</location>
		<location id="id4" x="263" y="221">
			<name x="212" y="247">DetectedQualified</name>
			<label kind="testcodeEnter">verify("{"
  + "\"instance\": \"this\","
  + "\"variables\": ["
  + "{\"name\":\"Detected\", \"value\":true},"
  + "{\"name\":\"Qualified\",\"value\":true}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</location>
		<location id="id5" x="263" y="-93">
			<name x="212" y="-136">DetectedNotQualified</name>
			<label kind="invariant" x="272" y="-68">x &lt;= qualificationTime(id)</label>
			<label kind="testcodeEnter">verify("{"
  + "\"instance\": \"this\","
  + "\"variables\": ["
  + "{\"name\":\"Detected\", \"value\":true},"
  + "{\"name\":\"Qualified\",\"value\":false}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</location>
		<location id="id6" x="-153" y="-102">
			<name x="-280" y="-144">NotDetectedNotQualified</name>
			<label kind="testcodeEnter">verify("{"
  + "\"instance\": \"this\","
  + "\"variables\": ["
  + "{\"name\":\"Detected\", \"value\":false},"
  + "{\"name\":\"Qualified\",\"value\":false}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</location>
		<init ref="id6"/>
		<transition>
			<source ref="id3"/>
			<target ref="id3"/>
			<label kind="guard" x="-280" y="153">isUnDetected(id)</label>
			<label kind="synchronisation" x="-272" y="178">scenario?</label>
			<nail x="-187" y="178"/>
			<nail x="-212" y="212"/>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id5"/>
			<label kind="guard" x="331" y="-110">isDetected(id)</label>
			<label kind="synchronisation" x="340" y="-93">scenario?</label>
			<nail x="323" y="-119"/>
			<nail x="331" y="-76"/>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id6"/>
			<label kind="guard" x="-314" y="-93">isUnDetected(id)</label>
			<label kind="synchronisation" x="-272" y="-72">scenario?</label>
			<nail x="-176" y="-48"/>
			<nail x="-208" y="-72"/>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id4"/>
			<label kind="guard" x="323" y="178">isDetected(id)</label>
			<label kind="synchronisation" x="331" y="204">scenario?</label>
			<nail x="328" y="205"/>
			<nail x="328" y="237"/>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id6"/>
			<label kind="guard" x="-323" y="8">x &gt;= dequalificationTime(id)</label>
			<label kind="assignment" x="-331" y="34">e5 = true,setDeQualified(id)</label>
			<label kind="testcode">//{type:"STATE"}</label>
			<nail x="-144" y="56"/>
			<nail x="-144" y="48"/>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id4"/>
			<label kind="guard" x="272" y="34">x &gt;= qualificationTime(id)</label>
			<label kind="assignment" x="272" y="59">e2 = true,setQualified(id)</label>
			<label kind="testcode">//{type:"STATE"}</label>
			<nail x="256" y="-8"/>
			<nail x="256" y="-8"/>
			<nail x="256" y="16"/>
			<nail x="256" y="32"/>
			<nail x="256" y="32"/>
			<nail x="256" y="96"/>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id4"/>
			<label kind="guard" x="8" y="246">isDetected(id)</label>
			<label kind="synchronisation" x="17" y="229">scenario?</label>
			<label kind="assignment" x="25" y="280">e4 = true</label>
			<label kind="testcode">//{type:"STATE"}</label>
			<nail x="51" y="280"/>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id3"/>
			<label kind="guard" x="0" y="170">isUnDetected(id)</label>
			<label kind="synchronisation" x="17" y="153">scenario?</label>
			<label kind="assignment" x="0" y="204">x = 0, e3 = true</label>
			<label kind="testcode">//{type:"STATE"}</label>
			<nail x="51" y="195"/>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id6"/>
			<label kind="guard" x="8" y="-93">isUnDetected(id)</label>
			<label kind="synchronisation" x="25" y="-110">scenario?</label>
			<label kind="assignment" x="0" y="-68">x = 0, e1 = true</label>
			<label kind="testcode">//{type:"STATE"}</label>
			<nail x="51" y="-68"/>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id5"/>
			<label kind="guard" x="8" y="-187">isDetected(id)</label>
			<label kind="synchronisation" x="17" y="-204">scenario?</label>
			<label kind="assignment" x="8" y="-153">x = 0, e0 = true</label>
			<label kind="testcode">//{type:"STATE"}</label>
			<nail x="51" y="-161"/>
		</transition>
	</template>
	<template>
		<name>ScenarioGenerator</name>
		<location id="id7" x="0" y="0">
		</location>
		<init ref="id7"/>
		<transition>
			<source ref="id7"/>
			<target ref="id7"/>
			<label kind="select" x="51" y="-110">i:scen_t</label>
			<label kind="synchronisation" x="59" y="-93">s[i]!</label>
			<label kind="testcode">//{"type":"SCENARIO", "encoding": "scen$(i)"}</label>
			<nail x="0" y="-68"/>
			<nail x="127" y="-68"/>
			<nail x="127" y="0"/>
		</transition>
	</template>
	<template>
		<name>Scen1</name>
		<location id="id8" x="152" y="-16">
			<label kind="invariant" x="110" y="0">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id9" x="-368" y="-16">
			<name x="-382" y="0">Start</name>
		</location>
		<init ref="id9"/>
		<transition>
			<source ref="id8"/>
			<target ref="id9"/>
			<label kind="guard" x="-170" y="25">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-144" y="76">scenario!</label>
			<label kind="assignment" x="-144" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id8"/>
			<label kind="guard" x="-348" y="-518">Errors[VoltageLowError].isQualified == false &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[1]?</label>
			<label kind="assignment" x="-255" y="-493">Errors[VoltageLowError].isDetected = true,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[1]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen2</name>
		<location id="id10" x="152" y="-16">
			<label kind="invariant" x="110" y="8">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id11" x="-368" y="-16">
			<name x="-384" y="8">Start</name>
		</location>
		<init ref="id11"/>
		<transition>
			<source ref="id10"/>
			<target ref="id11"/>
			<label kind="guard" x="-170" y="25">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-136" y="80">scenario!</label>
			<label kind="assignment" x="-136" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id11"/>
			<target ref="id10"/>
			<label kind="guard" x="-340" y="-518">Errors[VoltageLowError].isQualified == false &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[2]?</label>
			<label kind="assignment" x="-263" y="-493">Errors[VoltageLowError].isDetected = false,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[2]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen3</name>
		<location id="id12" x="152" y="-16">
			<label kind="invariant" x="102" y="0">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id13" x="-368" y="-16">
			<name x="-384" y="8">Start</name>
		</location>
		<init ref="id13"/>
		<transition>
			<source ref="id12"/>
			<target ref="id13"/>
			<label kind="guard" x="-170" y="17">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-136" y="76">scenario!</label>
			<label kind="assignment" x="-136" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id13"/>
			<target ref="id12"/>
			<label kind="guard" x="-323" y="-518">Errors[VoltageLowError].isQualified == true &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[3]?</label>
			<label kind="assignment" x="-238" y="-493">Errors[VoltageLowError].isDetected = true,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[3]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen4</name>
		<location id="id14" x="152" y="-16">
			<label kind="invariant" x="127" y="0">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id15" x="-368" y="-16">
			<name x="-384" y="8">Start</name>
		</location>
		<init ref="id15"/>
		<transition>
			<source ref="id14"/>
			<target ref="id15"/>
			<label kind="guard" x="-161" y="17">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-144" y="76">scenario!</label>
			<label kind="assignment" x="-136" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id15"/>
			<target ref="id14"/>
			<label kind="guard" x="-331" y="-535">Errors[VoltageLowError].isQualified == true &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[4]?</label>
			<label kind="assignment" x="-246" y="-510">Errors[VoltageLowError].isDetected = false,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[4]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen5</name>
		<location id="id16" x="152" y="-16">
			<label kind="invariant" x="110" y="0">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id17" x="-368" y="-16">
			<name x="-382" y="0">Start</name>
		</location>
		<init ref="id17"/>
		<transition>
			<source ref="id16"/>
			<target ref="id17"/>
			<label kind="guard" x="-170" y="25">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-144" y="76">scenario!</label>
			<label kind="assignment" x="-144" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id17"/>
			<target ref="id16"/>
			<label kind="guard" x="-348" y="-518">Errors[VoltageHighError].isQualified == false &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[5]?</label>
			<label kind="assignment" x="-255" y="-493">Errors[VoltageHighError].isDetected = true,
Errors[VoltageLowError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[5]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen6</name>
		<location id="id18" x="152" y="-16">
			<label kind="invariant" x="110" y="8">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id19" x="-368" y="-16">
			<name x="-384" y="8">Start</name>
		</location>
		<init ref="id19"/>
		<transition>
			<source ref="id18"/>
			<target ref="id19"/>
			<label kind="guard" x="-170" y="25">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-136" y="80">scenario!</label>
			<label kind="assignment" x="-136" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id19"/>
			<target ref="id18"/>
			<label kind="guard" x="-340" y="-518">Errors[VoltageHighError].isQualified == false &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[6]?</label>
			<label kind="assignment" x="-263" y="-493">Errors[VoltageHighError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[6]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen7</name>
		<location id="id20" x="152" y="-16">
			<label kind="invariant" x="102" y="0">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id21" x="-368" y="-16">
			<name x="-384" y="8">Start</name>
		</location>
		<init ref="id21"/>
		<transition>
			<source ref="id20"/>
			<target ref="id21"/>
			<label kind="guard" x="-170" y="17">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-136" y="76">scenario!</label>
			<label kind="assignment" x="-136" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id21"/>
			<target ref="id20"/>
			<label kind="guard" x="-323" y="-518">Errors[VoltageHighError].isQualified == true &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[7]?</label>
			<label kind="assignment" x="-238" y="-493">Errors[VoltageHighError].isDetected = true,
Errors[VoltageLowError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[7]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen8</name>
		<location id="id22" x="152" y="-16">
			<label kind="invariant" x="127" y="0">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id23" x="-368" y="-16">
			<name x="-384" y="8">Start</name>
		</location>
		<init ref="id23"/>
		<transition>
			<source ref="id22"/>
			<target ref="id23"/>
			<label kind="guard" x="-161" y="17">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-144" y="76">scenario!</label>
			<label kind="assignment" x="-136" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id23"/>
			<target ref="id22"/>
			<label kind="guard" x="-331" y="-535">Errors[VoltageHighError].isQualified == true &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[8]?</label>
			<label kind="assignment" x="-246" y="-510">Errors[VoltageHighError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[8]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen9</name>
		<location id="id24" x="152" y="-16">
			<label kind="invariant" x="110" y="0">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id25" x="-368" y="-16">
			<name x="-382" y="0">Start</name>
		</location>
		<init ref="id25"/>
		<transition>
			<source ref="id24"/>
			<target ref="id25"/>
			<label kind="guard" x="-170" y="25">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-144" y="76">scenario!</label>
			<label kind="assignment" x="-144" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id25"/>
			<target ref="id24"/>
			<label kind="guard" x="-348" y="-518">Errors[RAMError].isQualified == false &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[9]?</label>
			<label kind="assignment" x="-255" y="-493">Errors[RAMError].isDetected = true,
Errors[VoltageHighError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[9]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen10</name>
		<location id="id26" x="152" y="-16">
			<label kind="invariant" x="110" y="8">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id27" x="-368" y="-16">
			<name x="-384" y="8">Start</name>
		</location>
		<init ref="id27"/>
		<transition>
			<source ref="id26"/>
			<target ref="id27"/>
			<label kind="guard" x="-170" y="25">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-136" y="80">scenario!</label>
			<label kind="assignment" x="-136" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id27"/>
			<target ref="id26"/>
			<label kind="guard" x="-340" y="-518">Errors[RAMError].isQualified == false &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[10]?</label>
			<label kind="assignment" x="-263" y="-493">Errors[RAMError].isDetected = false,
Errors[VoltageHighError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[10]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen11</name>
		<location id="id28" x="152" y="-16">
			<label kind="invariant" x="102" y="0">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id29" x="-368" y="-16">
			<name x="-384" y="8">Start</name>
		</location>
		<init ref="id29"/>
		<transition>
			<source ref="id28"/>
			<target ref="id29"/>
			<label kind="guard" x="-170" y="17">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-136" y="76">scenario!</label>
			<label kind="assignment" x="-136" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id29"/>
			<target ref="id28"/>
			<label kind="guard" x="-323" y="-518">Errors[RAMError].isQualified == true &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[11]?</label>
			<label kind="assignment" x="-238" y="-493">Errors[RAMError].isDetected = true,
Errors[VoltageHighError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[11]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen12</name>
		<location id="id30" x="152" y="-16">
			<label kind="invariant" x="127" y="0">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id31" x="-368" y="-16">
			<name x="-384" y="8">Start</name>
		</location>
		<init ref="id31"/>
		<transition>
			<source ref="id30"/>
			<target ref="id31"/>
			<label kind="guard" x="-161" y="17">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-144" y="76">scenario!</label>
			<label kind="assignment" x="-136" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id31"/>
			<target ref="id30"/>
			<label kind="guard" x="-331" y="-535">Errors[RAMError].isQualified == true &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[12]?</label>
			<label kind="assignment" x="-246" y="-510">Errors[RAMError].isDetected = false,
Errors[VoltageHighError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[12]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen13</name>
		<location id="id32" x="152" y="-16">
			<label kind="invariant" x="110" y="0">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id33" x="-368" y="-16">
			<name x="-382" y="0">Start</name>
		</location>
		<init ref="id33"/>
		<transition>
			<source ref="id32"/>
			<target ref="id33"/>
			<label kind="guard" x="-170" y="25">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-144" y="76">scenario!</label>
			<label kind="assignment" x="-144" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id33"/>
			<target ref="id32"/>
			<label kind="guard" x="-348" y="-518">Errors[ROMError].isQualified == false &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[13]?</label>
			<label kind="assignment" x="-255" y="-493">Errors[ROMError].isDetected = true,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[13]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen14</name>
		<location id="id34" x="152" y="-16">
			<label kind="invariant" x="110" y="8">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id35" x="-368" y="-16">
			<name x="-384" y="8">Start</name>
		</location>
		<init ref="id35"/>
		<transition>
			<source ref="id34"/>
			<target ref="id35"/>
			<label kind="guard" x="-170" y="25">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-136" y="80">scenario!</label>
			<label kind="assignment" x="-136" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id35"/>
			<target ref="id34"/>
			<label kind="guard" x="-340" y="-518">Errors[ROMError].isQualified == false &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[14]?</label>
			<label kind="assignment" x="-263" y="-493">Errors[ROMError].isDetected = false,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[14]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen15</name>
		<location id="id36" x="152" y="-16">
			<label kind="invariant" x="102" y="0">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id37" x="-368" y="-16">
			<name x="-384" y="8">Start</name>
		</location>
		<init ref="id37"/>
		<transition>
			<source ref="id36"/>
			<target ref="id37"/>
			<label kind="guard" x="-170" y="17">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-136" y="76">scenario!</label>
			<label kind="assignment" x="-136" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id37"/>
			<target ref="id36"/>
			<label kind="guard" x="-323" y="-518">Errors[ROMError].isQualified == true &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[15]?</label>
			<label kind="assignment" x="-238" y="-493">Errors[ROMError].isDetected = true,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[15]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen16</name>
		<location id="id38" x="152" y="-16">
			<label kind="invariant" x="127" y="0">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id39" x="-368" y="-16">
			<name x="-384" y="8">Start</name>
		</location>
		<init ref="id39"/>
		<transition>
			<source ref="id38"/>
			<target ref="id39"/>
			<label kind="guard" x="-161" y="17">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-144" y="76">scenario!</label>
			<label kind="assignment" x="-136" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id39"/>
			<target ref="id38"/>
			<label kind="guard" x="-331" y="-535">Errors[ROMError].isQualified == true &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[16]?</label>
			<label kind="assignment" x="-246" y="-510">Errors[ROMError].isDetected = false,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[16]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen17</name>
		<location id="id40" x="152" y="-16">
			<label kind="invariant" x="110" y="0">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id41" x="-368" y="-16">
			<name x="-382" y="0">Start</name>
		</location>
		<init ref="id41"/>
		<transition>
			<source ref="id40"/>
			<target ref="id41"/>
			<label kind="guard" x="-170" y="25">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-144" y="76">scenario!</label>
			<label kind="assignment" x="-144" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id41"/>
			<target ref="id40"/>
			<label kind="guard" x="-348" y="-518">Errors[NVMCRCError].isQualified == false &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[17]?</label>
			<label kind="assignment" x="-255" y="-493">Errors[NVMCRCError].isDetected = true,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[17]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen18</name>
		<location id="id42" x="152" y="-16">
			<label kind="invariant" x="110" y="8">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id43" x="-368" y="-16">
			<name x="-384" y="8">Start</name>
		</location>
		<init ref="id43"/>
		<transition>
			<source ref="id42"/>
			<target ref="id43"/>
			<label kind="guard" x="-170" y="25">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-136" y="80">scenario!</label>
			<label kind="assignment" x="-136" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id43"/>
			<target ref="id42"/>
			<label kind="guard" x="-340" y="-518">Errors[NVMCRCError].isQualified == false &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[18]?</label>
			<label kind="assignment" x="-263" y="-493">Errors[NVMCRCError].isDetected = false,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[18]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen19</name>
		<location id="id44" x="152" y="-16">
			<label kind="invariant" x="102" y="0">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id45" x="-368" y="-16">
			<name x="-384" y="8">Start</name>
		</location>
		<init ref="id45"/>
		<transition>
			<source ref="id44"/>
			<target ref="id45"/>
			<label kind="guard" x="-170" y="17">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-136" y="76">scenario!</label>
			<label kind="assignment" x="-136" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id45"/>
			<target ref="id44"/>
			<label kind="guard" x="-323" y="-518">Errors[NVMCRCError].isQualified == true &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[19]?</label>
			<label kind="assignment" x="-238" y="-493">Errors[NVMCRCError].isDetected = true,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[19]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen20</name>
		<location id="id46" x="152" y="-16">
			<label kind="invariant" x="127" y="0">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id47" x="-368" y="-16">
			<name x="-384" y="8">Start</name>
		</location>
		<init ref="id47"/>
		<transition>
			<source ref="id46"/>
			<target ref="id47"/>
			<label kind="guard" x="-161" y="17">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-144" y="76">scenario!</label>
			<label kind="assignment" x="-136" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id47"/>
			<target ref="id46"/>
			<label kind="guard" x="-331" y="-535">Errors[NVMCRCError].isQualified == true &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[20]?</label>
			<label kind="assignment" x="-246" y="-510">Errors[NVMCRCError].isDetected = false,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[20]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen21</name>
		<location id="id48" x="152" y="-16">
			<label kind="invariant" x="110" y="0">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id49" x="-368" y="-16">
			<name x="-382" y="0">Start</name>
		</location>
		<init ref="id49"/>
		<transition>
			<source ref="id48"/>
			<target ref="id49"/>
			<label kind="guard" x="-170" y="25">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-144" y="76">scenario!</label>
			<label kind="assignment" x="-144" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id49"/>
			<target ref="id48"/>
			<label kind="guard" x="-348" y="-518">Errors[WatchdogResetError].isQualified == false &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[21]?</label>
			<label kind="assignment" x="-255" y="-493">Errors[WatchdogResetError].isDetected = true,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[21]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen22</name>
		<location id="id50" x="152" y="-16">
			<label kind="invariant" x="110" y="8">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id51" x="-368" y="-16">
			<name x="-384" y="8">Start</name>
		</location>
		<init ref="id51"/>
		<transition>
			<source ref="id50"/>
			<target ref="id51"/>
			<label kind="guard" x="-170" y="25">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-136" y="80">scenario!</label>
			<label kind="assignment" x="-136" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id51"/>
			<target ref="id50"/>
			<label kind="guard" x="-340" y="-518">Errors[WatchdogResetError].isQualified == false &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[22]?</label>
			<label kind="assignment" x="-263" y="-493">Errors[WatchdogResetError].isDetected = false,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[22]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen23</name>
		<location id="id52" x="152" y="-16">
			<label kind="invariant" x="102" y="0">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id53" x="-368" y="-16">
			<name x="-384" y="8">Start</name>
		</location>
		<init ref="id53"/>
		<transition>
			<source ref="id52"/>
			<target ref="id53"/>
			<label kind="guard" x="-170" y="17">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-136" y="76">scenario!</label>
			<label kind="assignment" x="-136" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id53"/>
			<target ref="id52"/>
			<label kind="guard" x="-323" y="-518">Errors[WatchdogResetError].isQualified == true &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[23]?</label>
			<label kind="assignment" x="-238" y="-493">Errors[WatchdogResetError].isDetected = true,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[23]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen24</name>
		<location id="id54" x="152" y="-16">
			<label kind="invariant" x="127" y="0">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id55" x="-368" y="-16">
			<name x="-384" y="8">Start</name>
		</location>
		<init ref="id55"/>
		<transition>
			<source ref="id54"/>
			<target ref="id55"/>
			<label kind="guard" x="-161" y="17">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-144" y="76">scenario!</label>
			<label kind="assignment" x="-136" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id55"/>
			<target ref="id54"/>
			<label kind="guard" x="-331" y="-535">Errors[WatchdogResetError].isQualified == true &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[24]?</label>
			<label kind="assignment" x="-246" y="-510">Errors[WatchdogResetError].isDetected = false,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[24]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen25</name>
		<location id="id56" x="152" y="-16">
			<label kind="invariant" x="110" y="0">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id57" x="-368" y="-16">
			<name x="-382" y="0">Start</name>
		</location>
		<init ref="id57"/>
		<transition>
			<source ref="id56"/>
			<target ref="id57"/>
			<label kind="guard" x="-170" y="25">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-144" y="76">scenario!</label>
			<label kind="assignment" x="-144" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id57"/>
			<target ref="id56"/>
			<label kind="guard" x="-348" y="-518">Errors[DiscardError].isQualified == false &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[25]?</label>
			<label kind="assignment" x="-255" y="-493">Errors[DiscardError].isDetected = true,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[25]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen26</name>
		<location id="id58" x="152" y="-16">
			<label kind="invariant" x="110" y="8">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id59" x="-368" y="-16">
			<name x="-384" y="8">Start</name>
		</location>
		<init ref="id59"/>
		<transition>
			<source ref="id58"/>
			<target ref="id59"/>
			<label kind="guard" x="-170" y="25">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-136" y="80">scenario!</label>
			<label kind="assignment" x="-136" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id59"/>
			<target ref="id58"/>
			<label kind="guard" x="-340" y="-518">Errors[DiscardError].isQualified == false &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[26]?</label>
			<label kind="assignment" x="-263" y="-493">Errors[DiscardError].isDetected = false,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[26]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen27</name>
		<location id="id60" x="152" y="-16">
			<label kind="invariant" x="102" y="0">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id61" x="-368" y="-16">
			<name x="-384" y="8">Start</name>
		</location>
		<init ref="id61"/>
		<transition>
			<source ref="id60"/>
			<target ref="id61"/>
			<label kind="guard" x="-170" y="17">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-136" y="76">scenario!</label>
			<label kind="assignment" x="-136" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id61"/>
			<target ref="id60"/>
			<label kind="guard" x="-323" y="-518">Errors[DiscardError].isQualified == true &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[27]?</label>
			<label kind="assignment" x="-238" y="-493">Errors[DiscardError].isDetected = true,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[27]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen28</name>
		<location id="id62" x="152" y="-16">
			<label kind="invariant" x="127" y="0">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id63" x="-368" y="-16">
			<name x="-384" y="8">Start</name>
		</location>
		<init ref="id63"/>
		<transition>
			<source ref="id62"/>
			<target ref="id63"/>
			<label kind="guard" x="-161" y="17">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-144" y="76">scenario!</label>
			<label kind="assignment" x="-136" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id63"/>
			<target ref="id62"/>
			<label kind="guard" x="-331" y="-535">Errors[DiscardError].isQualified == true &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[28]?</label>
			<label kind="assignment" x="-246" y="-510">Errors[DiscardError].isDetected = false,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[28]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen29</name>
		<location id="id64" x="152" y="-16">
			<label kind="invariant" x="110" y="0">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id65" x="-368" y="-16">
			<name x="-382" y="0">Start</name>
		</location>
		<init ref="id65"/>
		<transition>
			<source ref="id64"/>
			<target ref="id65"/>
			<label kind="guard" x="-170" y="25">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-144" y="76">scenario!</label>
			<label kind="assignment" x="-144" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id65"/>
			<target ref="id64"/>
			<label kind="guard" x="-348" y="-518">Errors[CalibrationNotLearnError].isQualified == false &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[29]?</label>
			<label kind="assignment" x="-255" y="-493">Errors[CalibrationNotLearnError].isDetected = true,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[29]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen30</name>
		<location id="id66" x="152" y="-16">
			<label kind="invariant" x="110" y="8">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id67" x="-368" y="-16">
			<name x="-384" y="8">Start</name>
		</location>
		<init ref="id67"/>
		<transition>
			<source ref="id66"/>
			<target ref="id67"/>
			<label kind="guard" x="-170" y="25">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-136" y="80">scenario!</label>
			<label kind="assignment" x="-136" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id67"/>
			<target ref="id66"/>
			<label kind="guard" x="-340" y="-518">Errors[CalibrationNotLearnError].isQualified == false &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[30]?</label>
			<label kind="assignment" x="-263" y="-493">Errors[CalibrationNotLearnError].isDetected = false,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[30]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen31</name>
		<location id="id68" x="152" y="-16">
			<label kind="invariant" x="102" y="0">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id69" x="-368" y="-16">
			<name x="-384" y="8">Start</name>
		</location>
		<init ref="id69"/>
		<transition>
			<source ref="id68"/>
			<target ref="id69"/>
			<label kind="guard" x="-170" y="17">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-136" y="76">scenario!</label>
			<label kind="assignment" x="-136" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id69"/>
			<target ref="id68"/>
			<label kind="guard" x="-323" y="-518">Errors[CalibrationNotLearnError].isQualified == true &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[31]?</label>
			<label kind="assignment" x="-238" y="-493">Errors[CalibrationNotLearnError].isDetected = true,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[31]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen32</name>
		<location id="id70" x="152" y="-16">
			<label kind="invariant" x="127" y="0">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id71" x="-368" y="-16">
			<name x="-384" y="8">Start</name>
		</location>
		<init ref="id71"/>
		<transition>
			<source ref="id70"/>
			<target ref="id71"/>
			<label kind="guard" x="-161" y="17">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-144" y="76">scenario!</label>
			<label kind="assignment" x="-136" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id71"/>
			<target ref="id70"/>
			<label kind="guard" x="-331" y="-535">Errors[CalibrationNotLearnError].isQualified == true &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[32]?</label>
			<label kind="assignment" x="-246" y="-510">Errors[CalibrationNotLearnError].isDetected = false,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[32]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen33</name>
		<location id="id72" x="152" y="-16">
			<label kind="invariant" x="110" y="0">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id73" x="-368" y="-16">
			<name x="-382" y="0">Start</name>
		</location>
		<init ref="id73"/>
		<transition>
			<source ref="id72"/>
			<target ref="id73"/>
			<label kind="guard" x="-170" y="25">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-144" y="76">scenario!</label>
			<label kind="assignment" x="-144" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id73"/>
			<target ref="id72"/>
			<label kind="guard" x="-348" y="-518">Errors[BuildCheckNotRunError].isQualified == false &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[33]?</label>
			<label kind="assignment" x="-255" y="-493">Errors[BuildCheckNotRunError].isDetected = true,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[33]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen34</name>
		<location id="id74" x="152" y="-16">
			<label kind="invariant" x="110" y="8">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id75" x="-368" y="-16">
			<name x="-384" y="8">Start</name>
		</location>
		<init ref="id75"/>
		<transition>
			<source ref="id74"/>
			<target ref="id75"/>
			<label kind="guard" x="-170" y="25">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-136" y="80">scenario!</label>
			<label kind="assignment" x="-136" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id75"/>
			<target ref="id74"/>
			<label kind="guard" x="-340" y="-518">Errors[BuildCheckNotRunError].isQualified == false &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[34]?</label>
			<label kind="assignment" x="-263" y="-493">Errors[BuildCheckNotRunError].isDetected = false,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[34]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen35</name>
		<location id="id76" x="152" y="-16">
			<label kind="invariant" x="102" y="0">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id77" x="-368" y="-16">
			<name x="-384" y="8">Start</name>
		</location>
		<init ref="id77"/>
		<transition>
			<source ref="id76"/>
			<target ref="id77"/>
			<label kind="guard" x="-170" y="17">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-136" y="76">scenario!</label>
			<label kind="assignment" x="-136" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id77"/>
			<target ref="id76"/>
			<label kind="guard" x="-323" y="-518">Errors[BuildCheckNotRunError].isQualified == true &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[35]?</label>
			<label kind="assignment" x="-238" y="-493">Errors[BuildCheckNotRunError].isDetected = true,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[35]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen36</name>
		<location id="id78" x="152" y="-16">
			<label kind="invariant" x="127" y="0">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id79" x="-368" y="-16">
			<name x="-384" y="8">Start</name>
		</location>
		<init ref="id79"/>
		<transition>
			<source ref="id78"/>
			<target ref="id79"/>
			<label kind="guard" x="-161" y="17">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-144" y="76">scenario!</label>
			<label kind="assignment" x="-136" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id79"/>
			<target ref="id78"/>
			<label kind="guard" x="-331" y="-535">Errors[BuildCheckNotRunError].isQualified == true &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[36]?</label>
			<label kind="assignment" x="-246" y="-510">Errors[BuildCheckNotRunError].isDetected = false,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[36]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen37</name>
		<location id="id80" x="152" y="-16">
			<label kind="invariant" x="110" y="0">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id81" x="-368" y="-16">
			<name x="-382" y="0">Start</name>
		</location>
		<init ref="id81"/>
		<transition>
			<source ref="id80"/>
			<target ref="id81"/>
			<label kind="guard" x="-170" y="25">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-144" y="76">scenario!</label>
			<label kind="assignment" x="-144" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id81"/>
			<target ref="id80"/>
			<label kind="guard" x="-348" y="-518">Errors[BuildCheckError].isQualified == false &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[37]?</label>
			<label kind="assignment" x="-255" y="-493">Errors[BuildCheckError].isDetected = true,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[37]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen38</name>
		<location id="id82" x="152" y="-16">
			<label kind="invariant" x="110" y="8">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id83" x="-368" y="-16">
			<name x="-384" y="8">Start</name>
		</location>
		<init ref="id83"/>
		<transition>
			<source ref="id82"/>
			<target ref="id83"/>
			<label kind="guard" x="-170" y="25">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-136" y="80">scenario!</label>
			<label kind="assignment" x="-136" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id83"/>
			<target ref="id82"/>
			<label kind="guard" x="-340" y="-518">Errors[BuildCheckError].isQualified == false &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[38]?</label>
			<label kind="assignment" x="-263" y="-493">Errors[BuildCheckError].isDetected = false,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[38]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen39</name>
		<location id="id84" x="152" y="-16">
			<label kind="invariant" x="102" y="0">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id85" x="-368" y="-16">
			<name x="-384" y="8">Start</name>
		</location>
		<init ref="id85"/>
		<transition>
			<source ref="id84"/>
			<target ref="id85"/>
			<label kind="guard" x="-170" y="17">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-136" y="76">scenario!</label>
			<label kind="assignment" x="-136" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id85"/>
			<target ref="id84"/>
			<label kind="guard" x="-323" y="-518">Errors[BuildCheckError].isQualified == true &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[39]?</label>
			<label kind="assignment" x="-238" y="-493">Errors[BuildCheckError].isDetected = true,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[39]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen40</name>
		<location id="id86" x="152" y="-16">
			<label kind="invariant" x="127" y="0">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id87" x="-368" y="-16">
			<name x="-384" y="8">Start</name>
		</location>
		<init ref="id87"/>
		<transition>
			<source ref="id86"/>
			<target ref="id87"/>
			<label kind="guard" x="-161" y="17">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-144" y="76">scenario!</label>
			<label kind="assignment" x="-136" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id87"/>
			<target ref="id86"/>
			<label kind="guard" x="-331" y="-535">Errors[BuildCheckError].isQualified == true &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[40]?</label>
			<label kind="assignment" x="-246" y="-510">Errors[BuildCheckError].isDetected = false,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[40]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen41</name>
		<location id="id88" x="152" y="-16">
			<label kind="invariant" x="110" y="0">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id89" x="-368" y="-16">
			<name x="-382" y="0">Start</name>
		</location>
		<init ref="id89"/>
		<transition>
			<source ref="id88"/>
			<target ref="id89"/>
			<label kind="guard" x="-170" y="25">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-144" y="76">scenario!</label>
			<label kind="assignment" x="-144" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id89"/>
			<target ref="id88"/>
			<label kind="guard" x="-348" y="-518">Errors[NVMAccessError].isQualified == false &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[41]?</label>
			<label kind="assignment" x="-255" y="-493">Errors[NVMAccessError].isDetected = true,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[41]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen42</name>
		<location id="id90" x="152" y="-16">
			<label kind="invariant" x="110" y="8">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id91" x="-368" y="-16">
			<name x="-384" y="8">Start</name>
		</location>
		<init ref="id91"/>
		<transition>
			<source ref="id90"/>
			<target ref="id91"/>
			<label kind="guard" x="-170" y="25">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-136" y="80">scenario!</label>
			<label kind="assignment" x="-136" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id91"/>
			<target ref="id90"/>
			<label kind="guard" x="-340" y="-518">Errors[NVMAccessError].isQualified == false &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[42]?</label>
			<label kind="assignment" x="-263" y="-493">Errors[NVMAccessError].isDetected = false,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[42]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen43</name>
		<location id="id92" x="152" y="-16">
			<label kind="invariant" x="102" y="0">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id93" x="-368" y="-16">
			<name x="-384" y="8">Start</name>
		</location>
		<init ref="id93"/>
		<transition>
			<source ref="id92"/>
			<target ref="id93"/>
			<label kind="guard" x="-170" y="17">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-136" y="76">scenario!</label>
			<label kind="assignment" x="-136" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id93"/>
			<target ref="id92"/>
			<label kind="guard" x="-323" y="-518">Errors[NVMAccessError].isQualified == true &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[43]?</label>
			<label kind="assignment" x="-238" y="-493">Errors[NVMAccessError].isDetected = true,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[43]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen44</name>
		<location id="id94" x="152" y="-16">
			<label kind="invariant" x="127" y="0">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id95" x="-368" y="-16">
			<name x="-384" y="8">Start</name>
		</location>
		<init ref="id95"/>
		<transition>
			<source ref="id94"/>
			<target ref="id95"/>
			<label kind="guard" x="-161" y="17">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-144" y="76">scenario!</label>
			<label kind="assignment" x="-136" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id95"/>
			<target ref="id94"/>
			<label kind="guard" x="-331" y="-535">Errors[NVMAccessError].isQualified == true &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[44]?</label>
			<label kind="assignment" x="-246" y="-510">Errors[NVMAccessError].isDetected = false,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[44]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen45</name>
		<location id="id96" x="152" y="-16">
			<label kind="invariant" x="110" y="0">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id97" x="-368" y="-16">
			<name x="-382" y="0">Start</name>
		</location>
		<init ref="id97"/>
		<transition>
			<source ref="id96"/>
			<target ref="id97"/>
			<label kind="guard" x="-170" y="25">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-144" y="76">scenario!</label>
			<label kind="assignment" x="-144" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id97"/>
			<target ref="id96"/>
			<label kind="guard" x="-348" y="-518">Errors[SeatFrameConnectionError].isQualified == false &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[45]?</label>
			<label kind="assignment" x="-255" y="-493">Errors[SeatFrameConnectionError].isDetected = true,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[45]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen46</name>
		<location id="id98" x="152" y="-16">
			<label kind="invariant" x="110" y="8">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id99" x="-368" y="-16">
			<name x="-384" y="8">Start</name>
		</location>
		<init ref="id99"/>
		<transition>
			<source ref="id98"/>
			<target ref="id99"/>
			<label kind="guard" x="-170" y="25">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-136" y="80">scenario!</label>
			<label kind="assignment" x="-136" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id99"/>
			<target ref="id98"/>
			<label kind="guard" x="-340" y="-518">Errors[SeatFrameConnectionError].isQualified == false &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[46]?</label>
			<label kind="assignment" x="-263" y="-493">Errors[SeatFrameConnectionError].isDetected = false,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[46]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen47</name>
		<location id="id100" x="152" y="-16">
			<label kind="invariant" x="102" y="0">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id101" x="-368" y="-16">
			<name x="-384" y="8">Start</name>
		</location>
		<init ref="id101"/>
		<transition>
			<source ref="id100"/>
			<target ref="id101"/>
			<label kind="guard" x="-170" y="17">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-136" y="76">scenario!</label>
			<label kind="assignment" x="-136" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id101"/>
			<target ref="id100"/>
			<label kind="guard" x="-323" y="-518">Errors[SeatFrameConnectionError].isQualified == true &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[47]?</label>
			<label kind="assignment" x="-238" y="-493">Errors[SeatFrameConnectionError].isDetected = true,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[47]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen48</name>
		<location id="id102" x="152" y="-16">
			<label kind="invariant" x="127" y="0">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id103" x="-368" y="-16">
			<name x="-384" y="8">Start</name>
		</location>
		<init ref="id103"/>
		<transition>
			<source ref="id102"/>
			<target ref="id103"/>
			<label kind="guard" x="-161" y="17">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-144" y="76">scenario!</label>
			<label kind="assignment" x="-136" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id103"/>
			<target ref="id102"/>
			<label kind="guard" x="-331" y="-535">Errors[SeatFrameConnectionError].isQualified == true &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[48]?</label>
			<label kind="assignment" x="-246" y="-510">Errors[SeatFrameConnectionError].isDetected = false,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[48]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen49</name>
		<location id="id104" x="152" y="-16">
			<label kind="invariant" x="110" y="0">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id105" x="-368" y="-16">
			<name x="-382" y="0">Start</name>
		</location>
		<init ref="id105"/>
		<transition>
			<source ref="id104"/>
			<target ref="id105"/>
			<label kind="guard" x="-170" y="25">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-144" y="76">scenario!</label>
			<label kind="assignment" x="-144" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id105"/>
			<target ref="id104"/>
			<label kind="guard" x="-348" y="-518">Errors[SeatHeaterCircuitIntegrityError].isQualified == false &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[49]?</label>
			<label kind="assignment" x="-255" y="-493">Errors[SeatHeaterCircuitIntegrityError].isDetected = true,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[49]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen50</name>
		<location id="id106" x="152" y="-16">
			<label kind="invariant" x="110" y="8">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id107" x="-368" y="-16">
			<name x="-384" y="8">Start</name>
		</location>
		<init ref="id107"/>
		<transition>
			<source ref="id106"/>
			<target ref="id107"/>
			<label kind="guard" x="-170" y="25">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-136" y="80">scenario!</label>
			<label kind="assignment" x="-136" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id107"/>
			<target ref="id106"/>
			<label kind="guard" x="-340" y="-518">Errors[SeatHeaterCircuitIntegrityError].isQualified == false &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[50]?</label>
			<label kind="assignment" x="-263" y="-493">Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[50]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen51</name>
		<location id="id108" x="152" y="-16">
			<label kind="invariant" x="102" y="0">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id109" x="-368" y="-16">
			<name x="-384" y="8">Start</name>
		</location>
		<init ref="id109"/>
		<transition>
			<source ref="id108"/>
			<target ref="id109"/>
			<label kind="guard" x="-170" y="17">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-136" y="76">scenario!</label>
			<label kind="assignment" x="-136" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id109"/>
			<target ref="id108"/>
			<label kind="guard" x="-323" y="-518">Errors[SeatHeaterCircuitIntegrityError].isQualified == true &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[51]?</label>
			<label kind="assignment" x="-238" y="-493">Errors[SeatHeaterCircuitIntegrityError].isDetected = true,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[51]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen52</name>
		<location id="id110" x="152" y="-16">
			<label kind="invariant" x="127" y="0">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id111" x="-368" y="-16">
			<name x="-384" y="8">Start</name>
		</location>
		<init ref="id111"/>
		<transition>
			<source ref="id110"/>
			<target ref="id111"/>
			<label kind="guard" x="-161" y="17">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-144" y="76">scenario!</label>
			<label kind="assignment" x="-136" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id111"/>
			<target ref="id110"/>
			<label kind="guard" x="-331" y="-535">Errors[SeatHeaterCircuitIntegrityError].isQualified == true &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[52]?</label>
			<label kind="assignment" x="-246" y="-510">Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[52]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen53</name>
		<location id="id112" x="152" y="-16">
			<label kind="invariant" x="110" y="0">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id113" x="-368" y="-16">
			<name x="-382" y="0">Start</name>
		</location>
		<init ref="id113"/>
		<transition>
			<source ref="id112"/>
			<target ref="id113"/>
			<label kind="guard" x="-170" y="25">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-144" y="76">scenario!</label>
			<label kind="assignment" x="-144" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id113"/>
			<target ref="id112"/>
			<label kind="guard" x="-348" y="-518">Errors[CableShieldError].isQualified == false &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[53]?</label>
			<label kind="assignment" x="-255" y="-493">Errors[CableShieldError].isDetected = true,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[53]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen54</name>
		<location id="id114" x="152" y="-16">
			<label kind="invariant" x="110" y="8">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id115" x="-368" y="-16">
			<name x="-384" y="8">Start</name>
		</location>
		<init ref="id115"/>
		<transition>
			<source ref="id114"/>
			<target ref="id115"/>
			<label kind="guard" x="-170" y="25">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-136" y="80">scenario!</label>
			<label kind="assignment" x="-136" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id115"/>
			<target ref="id114"/>
			<label kind="guard" x="-340" y="-518">Errors[CableShieldError].isQualified == false &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[54]?</label>
			<label kind="assignment" x="-263" y="-493">Errors[CableShieldError].isDetected = false,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[54]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen55</name>
		<location id="id116" x="152" y="-16">
			<label kind="invariant" x="102" y="0">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id117" x="-368" y="-16">
			<name x="-384" y="8">Start</name>
		</location>
		<init ref="id117"/>
		<transition>
			<source ref="id116"/>
			<target ref="id117"/>
			<label kind="guard" x="-170" y="17">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-136" y="76">scenario!</label>
			<label kind="assignment" x="-136" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id117"/>
			<target ref="id116"/>
			<label kind="guard" x="-323" y="-518">Errors[CableShieldError].isQualified == true &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[55]?</label>
			<label kind="assignment" x="-238" y="-493">Errors[CableShieldError].isDetected = true,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[55]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen56</name>
		<location id="id118" x="152" y="-16">
			<label kind="invariant" x="127" y="0">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id119" x="-368" y="-16">
			<name x="-384" y="8">Start</name>
		</location>
		<init ref="id119"/>
		<transition>
			<source ref="id118"/>
			<target ref="id119"/>
			<label kind="guard" x="-161" y="17">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-144" y="76">scenario!</label>
			<label kind="assignment" x="-136" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id119"/>
			<target ref="id118"/>
			<label kind="guard" x="-331" y="-535">Errors[CableShieldError].isQualified == true &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[56]?</label>
			<label kind="assignment" x="-246" y="-510">Errors[CableShieldError].isDetected = false,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[56]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen57</name>
		<location id="id120" x="152" y="-16">
			<label kind="invariant" x="110" y="0">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id121" x="-368" y="-16">
			<name x="-382" y="0">Start</name>
		</location>
		<init ref="id121"/>
		<transition>
			<source ref="id120"/>
			<target ref="id121"/>
			<label kind="guard" x="-170" y="25">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-144" y="76">scenario!</label>
			<label kind="assignment" x="-144" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id121"/>
			<target ref="id120"/>
			<label kind="guard" x="-348" y="-518">Errors[TemperatureSensorError].isQualified == false &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[57]?</label>
			<label kind="assignment" x="-255" y="-493">Errors[TemperatureSensorError].isDetected = true,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[57]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen58</name>
		<location id="id122" x="152" y="-16">
			<label kind="invariant" x="110" y="8">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id123" x="-368" y="-16">
			<name x="-384" y="8">Start</name>
		</location>
		<init ref="id123"/>
		<transition>
			<source ref="id122"/>
			<target ref="id123"/>
			<label kind="guard" x="-170" y="25">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-136" y="80">scenario!</label>
			<label kind="assignment" x="-136" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id123"/>
			<target ref="id122"/>
			<label kind="guard" x="-340" y="-518">Errors[TemperatureSensorError].isQualified == false &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[58]?</label>
			<label kind="assignment" x="-263" y="-493">Errors[TemperatureSensorError].isDetected = false,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[58]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen59</name>
		<location id="id124" x="152" y="-16">
			<label kind="invariant" x="102" y="0">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id125" x="-368" y="-16">
			<name x="-384" y="8">Start</name>
		</location>
		<init ref="id125"/>
		<transition>
			<source ref="id124"/>
			<target ref="id125"/>
			<label kind="guard" x="-170" y="17">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-136" y="76">scenario!</label>
			<label kind="assignment" x="-136" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id125"/>
			<target ref="id124"/>
			<label kind="guard" x="-323" y="-518">Errors[TemperatureSensorError].isQualified == true &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[59]?</label>
			<label kind="assignment" x="-238" y="-493">Errors[TemperatureSensorError].isDetected = true,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[59]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen60</name>
		<location id="id126" x="152" y="-16">
			<label kind="invariant" x="127" y="0">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id127" x="-368" y="-16">
			<name x="-384" y="8">Start</name>
		</location>
		<init ref="id127"/>
		<transition>
			<source ref="id126"/>
			<target ref="id127"/>
			<label kind="guard" x="-161" y="17">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-144" y="76">scenario!</label>
			<label kind="assignment" x="-136" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id127"/>
			<target ref="id126"/>
			<label kind="guard" x="-331" y="-535">Errors[TemperatureSensorError].isQualified == true &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[60]?</label>
			<label kind="assignment" x="-246" y="-510">Errors[TemperatureSensorError].isDetected = false,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[60]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen61</name>
		<location id="id128" x="152" y="-16">
			<label kind="invariant" x="110" y="0">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id129" x="-368" y="-16">
			<name x="-382" y="0">Start</name>
		</location>
		<init ref="id129"/>
		<transition>
			<source ref="id128"/>
			<target ref="id129"/>
			<label kind="guard" x="-170" y="25">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-144" y="76">scenario!</label>
			<label kind="assignment" x="-144" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id129"/>
			<target ref="id128"/>
			<label kind="guard" x="-348" y="-518">Errors[InternalMeasurementPathError].isQualified == false &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[61]?</label>
			<label kind="assignment" x="-255" y="-493">Errors[InternalMeasurementPathError].isDetected = true,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[61]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen62</name>
		<location id="id130" x="152" y="-16">
			<label kind="invariant" x="110" y="8">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id131" x="-368" y="-16">
			<name x="-384" y="8">Start</name>
		</location>
		<init ref="id131"/>
		<transition>
			<source ref="id130"/>
			<target ref="id131"/>
			<label kind="guard" x="-170" y="25">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-136" y="80">scenario!</label>
			<label kind="assignment" x="-136" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id131"/>
			<target ref="id130"/>
			<label kind="guard" x="-340" y="-518">Errors[InternalMeasurementPathError].isQualified == false &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[62]?</label>
			<label kind="assignment" x="-263" y="-493">Errors[InternalMeasurementPathError].isDetected = false,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[62]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen63</name>
		<location id="id132" x="152" y="-16">
			<label kind="invariant" x="102" y="0">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id133" x="-368" y="-16">
			<name x="-384" y="8">Start</name>
		</location>
		<init ref="id133"/>
		<transition>
			<source ref="id132"/>
			<target ref="id133"/>
			<label kind="guard" x="-170" y="17">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-136" y="76">scenario!</label>
			<label kind="assignment" x="-136" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id133"/>
			<target ref="id132"/>
			<label kind="guard" x="-323" y="-518">Errors[InternalMeasurementPathError].isQualified == true &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[63]?</label>
			<label kind="assignment" x="-238" y="-493">Errors[InternalMeasurementPathError].isDetected = true,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[63]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen64</name>
		<location id="id134" x="152" y="-16">
			<label kind="invariant" x="127" y="0">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id135" x="-368" y="-16">
			<name x="-384" y="8">Start</name>
		</location>
		<init ref="id135"/>
		<transition>
			<source ref="id134"/>
			<target ref="id135"/>
			<label kind="guard" x="-161" y="17">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-144" y="76">scenario!</label>
			<label kind="assignment" x="-136" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id135"/>
			<target ref="id134"/>
			<label kind="guard" x="-331" y="-535">Errors[InternalMeasurementPathError].isQualified == true &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[64]?</label>
			<label kind="assignment" x="-246" y="-510">Errors[InternalMeasurementPathError].isDetected = false,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[64]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen65</name>
		<location id="id136" x="152" y="-16">
			<label kind="invariant" x="110" y="0">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id137" x="-368" y="-16">
			<name x="-382" y="0">Start</name>
		</location>
		<init ref="id137"/>
		<transition>
			<source ref="id136"/>
			<target ref="id137"/>
			<label kind="guard" x="-170" y="25">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-144" y="76">scenario!</label>
			<label kind="assignment" x="-144" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id137"/>
			<target ref="id136"/>
			<label kind="guard" x="-348" y="-518">Errors[MeasurementSensePathError].isQualified == false &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[65]?</label>
			<label kind="assignment" x="-255" y="-493">Errors[MeasurementSensePathError].isDetected = true,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[65]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen66</name>
		<location id="id138" x="152" y="-16">
			<label kind="invariant" x="110" y="8">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id139" x="-368" y="-16">
			<name x="-384" y="8">Start</name>
		</location>
		<init ref="id139"/>
		<transition>
			<source ref="id138"/>
			<target ref="id139"/>
			<label kind="guard" x="-170" y="25">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-136" y="80">scenario!</label>
			<label kind="assignment" x="-136" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id139"/>
			<target ref="id138"/>
			<label kind="guard" x="-340" y="-518">Errors[MeasurementSensePathError].isQualified == false &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[66]?</label>
			<label kind="assignment" x="-263" y="-493">Errors[MeasurementSensePathError].isDetected = false,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[66]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen67</name>
		<location id="id140" x="152" y="-16">
			<label kind="invariant" x="102" y="0">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id141" x="-368" y="-16">
			<name x="-384" y="8">Start</name>
		</location>
		<init ref="id141"/>
		<transition>
			<source ref="id140"/>
			<target ref="id141"/>
			<label kind="guard" x="-170" y="17">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-136" y="76">scenario!</label>
			<label kind="assignment" x="-136" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id141"/>
			<target ref="id140"/>
			<label kind="guard" x="-323" y="-518">Errors[MeasurementSensePathError].isQualified == true &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[67]?</label>
			<label kind="assignment" x="-238" y="-493">Errors[MeasurementSensePathError].isDetected = true,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[67]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen68</name>
		<location id="id142" x="152" y="-16">
			<label kind="invariant" x="127" y="0">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id143" x="-368" y="-16">
			<name x="-384" y="8">Start</name>
		</location>
		<init ref="id143"/>
		<transition>
			<source ref="id142"/>
			<target ref="id143"/>
			<label kind="guard" x="-161" y="17">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-144" y="76">scenario!</label>
			<label kind="assignment" x="-136" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id143"/>
			<target ref="id142"/>
			<label kind="guard" x="-331" y="-535">Errors[MeasurementSensePathError].isQualified == true &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[68]?</label>
			<label kind="assignment" x="-246" y="-510">Errors[MeasurementSensePathError].isDetected = false,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[68]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen69</name>
		<location id="id144" x="152" y="-16">
			<label kind="invariant" x="110" y="0">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id145" x="-368" y="-16">
			<name x="-382" y="0">Start</name>
		</location>
		<init ref="id145"/>
		<transition>
			<source ref="id144"/>
			<target ref="id145"/>
			<label kind="guard" x="-170" y="25">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-144" y="76">scenario!</label>
			<label kind="assignment" x="-144" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id145"/>
			<target ref="id144"/>
			<label kind="guard" x="-348" y="-518">Errors[TemperatureRangeError].isQualified == false &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[69]?</label>
			<label kind="assignment" x="-255" y="-493">Errors[TemperatureRangeError].isDetected = true,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[69]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen70</name>
		<location id="id146" x="152" y="-16">
			<label kind="invariant" x="110" y="8">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id147" x="-368" y="-16">
			<name x="-384" y="8">Start</name>
		</location>
		<init ref="id147"/>
		<transition>
			<source ref="id146"/>
			<target ref="id147"/>
			<label kind="guard" x="-170" y="25">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-136" y="80">scenario!</label>
			<label kind="assignment" x="-136" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id147"/>
			<target ref="id146"/>
			<label kind="guard" x="-340" y="-518">Errors[TemperatureRangeError].isQualified == false &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[70]?</label>
			<label kind="assignment" x="-263" y="-493">Errors[TemperatureRangeError].isDetected = false,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[70]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen71</name>
		<location id="id148" x="152" y="-16">
			<label kind="invariant" x="102" y="0">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id149" x="-368" y="-16">
			<name x="-384" y="8">Start</name>
		</location>
		<init ref="id149"/>
		<transition>
			<source ref="id148"/>
			<target ref="id149"/>
			<label kind="guard" x="-170" y="17">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-136" y="76">scenario!</label>
			<label kind="assignment" x="-136" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id149"/>
			<target ref="id148"/>
			<label kind="guard" x="-323" y="-518">Errors[TemperatureRangeError].isQualified == true &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[71]?</label>
			<label kind="assignment" x="-238" y="-493">Errors[TemperatureRangeError].isDetected = true,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[71]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen72</name>
		<location id="id150" x="152" y="-16">
			<label kind="invariant" x="127" y="0">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id151" x="-368" y="-16">
			<name x="-384" y="8">Start</name>
		</location>
		<init ref="id151"/>
		<transition>
			<source ref="id150"/>
			<target ref="id151"/>
			<label kind="guard" x="-161" y="17">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-144" y="76">scenario!</label>
			<label kind="assignment" x="-136" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id151"/>
			<target ref="id150"/>
			<label kind="guard" x="-331" y="-535">Errors[TemperatureRangeError].isQualified == true &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[72]?</label>
			<label kind="assignment" x="-246" y="-510">Errors[TemperatureRangeError].isDetected = false,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[72]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen73</name>
		<location id="id152" x="152" y="-16">
			<label kind="invariant" x="110" y="0">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id153" x="-368" y="-16">
			<name x="-382" y="0">Start</name>
		</location>
		<init ref="id153"/>
		<transition>
			<source ref="id152"/>
			<target ref="id153"/>
			<label kind="guard" x="-170" y="25">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-144" y="76">scenario!</label>
			<label kind="assignment" x="-144" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id153"/>
			<target ref="id152"/>
			<label kind="guard" x="-348" y="-518">Errors[TemperatureRangeLimitError].isQualified == false &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[73]?</label>
			<label kind="assignment" x="-255" y="-493">Errors[TemperatureRangeLimitError].isDetected = true,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[73]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen74</name>
		<location id="id154" x="152" y="-16">
			<label kind="invariant" x="110" y="8">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id155" x="-368" y="-16">
			<name x="-384" y="8">Start</name>
		</location>
		<init ref="id155"/>
		<transition>
			<source ref="id154"/>
			<target ref="id155"/>
			<label kind="guard" x="-170" y="25">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-136" y="80">scenario!</label>
			<label kind="assignment" x="-136" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id155"/>
			<target ref="id154"/>
			<label kind="guard" x="-340" y="-518">Errors[TemperatureRangeLimitError].isQualified == false &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[74]?</label>
			<label kind="assignment" x="-263" y="-493">Errors[TemperatureRangeLimitError].isDetected = false,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[74]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen75</name>
		<location id="id156" x="152" y="-16">
			<label kind="invariant" x="102" y="0">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id157" x="-368" y="-16">
			<name x="-384" y="8">Start</name>
		</location>
		<init ref="id157"/>
		<transition>
			<source ref="id156"/>
			<target ref="id157"/>
			<label kind="guard" x="-170" y="17">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-136" y="76">scenario!</label>
			<label kind="assignment" x="-136" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id157"/>
			<target ref="id156"/>
			<label kind="guard" x="-323" y="-518">Errors[TemperatureRangeLimitError].isQualified == true &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[75]?</label>
			<label kind="assignment" x="-238" y="-493">Errors[TemperatureRangeLimitError].isDetected = true,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[75]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen76</name>
		<location id="id158" x="152" y="-16">
			<label kind="invariant" x="127" y="0">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id159" x="-368" y="-16">
			<name x="-384" y="8">Start</name>
		</location>
		<init ref="id159"/>
		<transition>
			<source ref="id158"/>
			<target ref="id159"/>
			<label kind="guard" x="-161" y="17">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-144" y="76">scenario!</label>
			<label kind="assignment" x="-136" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id159"/>
			<target ref="id158"/>
			<label kind="guard" x="-331" y="-535">Errors[TemperatureRangeLimitError].isQualified == true &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[76]?</label>
			<label kind="assignment" x="-246" y="-510">Errors[TemperatureRangeLimitError].isDetected = false,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[76]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen77</name>
		<location id="id160" x="152" y="-16">
			<label kind="invariant" x="110" y="0">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id161" x="-368" y="-16">
			<name x="-382" y="0">Start</name>
		</location>
		<init ref="id161"/>
		<transition>
			<source ref="id160"/>
			<target ref="id161"/>
			<label kind="guard" x="-170" y="25">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-144" y="76">scenario!</label>
			<label kind="assignment" x="-144" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id161"/>
			<target ref="id160"/>
			<label kind="guard" x="-348" y="-518">Errors[MeasurementRangeError].isQualified == false &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[77]?</label>
			<label kind="assignment" x="-255" y="-493">Errors[MeasurementRangeError].isDetected = true,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[77]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen78</name>
		<location id="id162" x="152" y="-16">
			<label kind="invariant" x="110" y="8">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id163" x="-368" y="-16">
			<name x="-384" y="8">Start</name>
		</location>
		<init ref="id163"/>
		<transition>
			<source ref="id162"/>
			<target ref="id163"/>
			<label kind="guard" x="-170" y="25">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-136" y="80">scenario!</label>
			<label kind="assignment" x="-136" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id163"/>
			<target ref="id162"/>
			<label kind="guard" x="-340" y="-518">Errors[MeasurementRangeError].isQualified == false &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[78]?</label>
			<label kind="assignment" x="-263" y="-493">Errors[MeasurementRangeError].isDetected = false,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[78]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen79</name>
		<location id="id164" x="152" y="-16">
			<label kind="invariant" x="102" y="0">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id165" x="-368" y="-16">
			<name x="-384" y="8">Start</name>
		</location>
		<init ref="id165"/>
		<transition>
			<source ref="id164"/>
			<target ref="id165"/>
			<label kind="guard" x="-170" y="17">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-136" y="76">scenario!</label>
			<label kind="assignment" x="-136" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id165"/>
			<target ref="id164"/>
			<label kind="guard" x="-323" y="-518">Errors[MeasurementRangeError].isQualified == true &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[79]?</label>
			<label kind="assignment" x="-238" y="-493">Errors[MeasurementRangeError].isDetected = true,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[79]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen80</name>
		<location id="id166" x="152" y="-16">
			<label kind="invariant" x="127" y="0">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id167" x="-368" y="-16">
			<name x="-384" y="8">Start</name>
		</location>
		<init ref="id167"/>
		<transition>
			<source ref="id166"/>
			<target ref="id167"/>
			<label kind="guard" x="-161" y="17">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-144" y="76">scenario!</label>
			<label kind="assignment" x="-136" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id167"/>
			<target ref="id166"/>
			<label kind="guard" x="-331" y="-535">Errors[MeasurementRangeError].isQualified == true &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[80]?</label>
			<label kind="assignment" x="-246" y="-510">Errors[MeasurementRangeError].isDetected = false,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[80]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen81</name>
		<location id="id168" x="152" y="-16">
			<label kind="invariant" x="110" y="0">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id169" x="-368" y="-16">
			<name x="-382" y="0">Start</name>
		</location>
		<init ref="id169"/>
		<transition>
			<source ref="id168"/>
			<target ref="id169"/>
			<label kind="guard" x="-170" y="25">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-144" y="76">scenario!</label>
			<label kind="assignment" x="-144" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id169"/>
			<target ref="id168"/>
			<label kind="guard" x="-348" y="-518">Errors[CalibrationDataError].isQualified == false &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[81]?</label>
			<label kind="assignment" x="-255" y="-493">Errors[CalibrationDataError].isDetected = true,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[81]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen82</name>
		<location id="id170" x="152" y="-16">
			<label kind="invariant" x="110" y="8">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id171" x="-368" y="-16">
			<name x="-384" y="8">Start</name>
		</location>
		<init ref="id171"/>
		<transition>
			<source ref="id170"/>
			<target ref="id171"/>
			<label kind="guard" x="-170" y="25">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-136" y="80">scenario!</label>
			<label kind="assignment" x="-136" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id171"/>
			<target ref="id170"/>
			<label kind="guard" x="-340" y="-518">Errors[CalibrationDataError].isQualified == false &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[82]?</label>
			<label kind="assignment" x="-263" y="-493">Errors[CalibrationDataError].isDetected = false,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[82]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen83</name>
		<location id="id172" x="152" y="-16">
			<label kind="invariant" x="102" y="0">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id173" x="-368" y="-16">
			<name x="-384" y="8">Start</name>
		</location>
		<init ref="id173"/>
		<transition>
			<source ref="id172"/>
			<target ref="id173"/>
			<label kind="guard" x="-170" y="17">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-136" y="76">scenario!</label>
			<label kind="assignment" x="-136" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id173"/>
			<target ref="id172"/>
			<label kind="guard" x="-323" y="-518">Errors[CalibrationDataError].isQualified == true &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[83]?</label>
			<label kind="assignment" x="-238" y="-493">Errors[CalibrationDataError].isDetected = true,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[83]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen84</name>
		<location id="id174" x="152" y="-16">
			<label kind="invariant" x="127" y="0">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id175" x="-368" y="-16">
			<name x="-384" y="8">Start</name>
		</location>
		<init ref="id175"/>
		<transition>
			<source ref="id174"/>
			<target ref="id175"/>
			<label kind="guard" x="-161" y="17">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-144" y="76">scenario!</label>
			<label kind="assignment" x="-136" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id175"/>
			<target ref="id174"/>
			<label kind="guard" x="-331" y="-535">Errors[CalibrationDataError].isQualified == true &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[84]?</label>
			<label kind="assignment" x="-246" y="-510">Errors[CalibrationDataError].isDetected = false,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
Errors[ShortToUbatGndError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[84]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen85</name>
		<location id="id176" x="152" y="-16">
			<label kind="invariant" x="127" y="0">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id177" x="-368" y="-16">
			<name x="-384" y="8">Start</name>
		</location>
		<init ref="id177"/>
		<transition>
			<source ref="id176"/>
			<target ref="id177"/>
			<label kind="guard" x="-161" y="17">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-144" y="76">scenario!</label>
			<label kind="assignment" x="-136" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id177"/>
			<target ref="id176"/>
			<label kind="guard" x="-331" y="-535">Errors[ShortToUbatGndError].isQualified == true &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[85]?</label>
			<label kind="assignment" x="-246" y="-510">Errors[ShortToUbatGndError].isDetected = false,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[85]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen86</name>
		<location id="id178" x="152" y="-16">
			<label kind="invariant" x="110" y="0">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id179" x="-368" y="-16">
			<name x="-382" y="0">Start</name>
		</location>
		<init ref="id179"/>
		<transition>
			<source ref="id178"/>
			<target ref="id179"/>
			<label kind="guard" x="-170" y="25">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-144" y="76">scenario!</label>
			<label kind="assignment" x="-144" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id179"/>
			<target ref="id178"/>
			<label kind="guard" x="-348" y="-518">Errors[ShortToUbatGndError].isQualified == false &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[86]?</label>
			<label kind="assignment" x="-255" y="-493">Errors[ShortToUbatGndError].isDetected = true,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[86]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen87</name>
		<location id="id180" x="152" y="-16">
			<label kind="invariant" x="110" y="8">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id181" x="-368" y="-16">
			<name x="-384" y="8">Start</name>
		</location>
		<init ref="id181"/>
		<transition>
			<source ref="id180"/>
			<target ref="id181"/>
			<label kind="guard" x="-170" y="25">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-136" y="80">scenario!</label>
			<label kind="assignment" x="-136" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id181"/>
			<target ref="id180"/>
			<label kind="guard" x="-340" y="-518">Errors[ShortToUbatGndError].isQualified == false &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[87]?</label>
			<label kind="assignment" x="-263" y="-493">Errors[ShortToUbatGndError].isDetected = false,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[87]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<template>
		<name>Scen88</name>
		<location id="id182" x="152" y="-16">
			<label kind="invariant" x="102" y="0">scen &lt;= EXE_TIME</label>
		</location>
		<location id="id183" x="-368" y="-16">
			<name x="-384" y="8">Start</name>
		</location>
		<init ref="id183"/>
		<transition>
			<source ref="id182"/>
			<target ref="id183"/>
			<label kind="guard" x="-170" y="17">scen == EXE_TIME</label>
			<label kind="synchronisation" x="-136" y="76">scenario!</label>
			<label kind="assignment" x="-136" y="42">scenarioExe = false</label>
			<nail x="-112" y="72"/>
		</transition>
		<transition>
			<source ref="id183"/>
			<target ref="id182"/>
			<label kind="guard" x="-323" y="-518">Errors[ShortToUbatGndError].isQualified == true &amp;&amp; scenarioExe == false</label>
			<label kind="synchronisation" x="-119" y="-34">s[88]?</label>
			<label kind="assignment" x="-238" y="-493">Errors[ShortToUbatGndError].isDetected = true,
Errors[VoltageHighError].isDetected = false,
Errors[RAMError].isDetected = false,
Errors[ROMError].isDetected = false,
Errors[NVMCRCError].isDetected = false,
Errors[WatchdogResetError].isDetected = false,
Errors[DiscardError].isDetected = false,
Errors[CalibrationNotLearnError].isDetected = false,
Errors[BuildCheckNotRunError].isDetected = false,
Errors[BuildCheckError].isDetected = false,
Errors[NVMAccessError].isDetected = false,
Errors[SeatFrameConnectionError].isDetected = false,
Errors[SeatHeaterCircuitIntegrityError].isDetected = false,
Errors[CableShieldError].isDetected = false,
Errors[TemperatureSensorError].isDetected = false,
Errors[InternalMeasurementPathError].isDetected = false,
Errors[MeasurementSensePathError].isDetected = false,
Errors[TemperatureRangeError].isDetected = false,
Errors[TemperatureRangeLimitError].isDetected = false,
Errors[MeasurementRangeError].isDetected = false,
Errors[CalibrationDataError].isDetected = false,
Errors[VoltageLowError].isDetected = false,
scenarioExe = true, scen = 0</label>
			<label kind="testcode">executeScenario("{"
  + "\"scenario\": \"s[88]\","
  + "\"parameters\": ["
  + "{\"name\":null,\"value\":null}"
  + "],"
  + "\"timestamp\": $(timestamp)"
+ "}");</label>
		</transition>
	</template>
	<system>// Place template instantiations here.

VOLTAGE_LOW_ERROR = Error(VoltageLowError);
VOLTAGE_HIGH_ERROR = Error(VoltageHighError);
RAM_ERROR = Error(RAMError);
ROM_ERROR = Error(ROMError);
NVM_CRC_ERROR = Error(NVMCRCError);
WATCHDOG_RESET_ERROR = Error(WatchdogResetError);
DISCARD_ERROR = Error(DiscardError);
CALIBRATION_NOT_LEARNED_ERROR = Error(CalibrationNotLearnError);
BUILD_CHECK_NOT_RUN_ERROR = Error(BuildCheckNotRunError);
BUILD_CHECK_ERROR = Error(BuildCheckError);
NVM_ACCESS_ERROR = Error(NVMAccessError);
SEAT_FRAME_CONNECTION_ERROR = Error(SeatFrameConnectionError);
SEAT_HEATER_CIRCUIT_INTEGRITY_ERROR = Error(SeatHeaterCircuitIntegrityError);
CABLE_SHIELD_ERROR = Error(CableShieldError);
TEMPERATURE_SENSOR_ERROR = Error(TemperatureSensorError);
INTERNAL_MEASUREMENT_PATH_ERROR = Error(InternalMeasurementPathError);
MEASUREMENT_SENSE_PATH_ERROR = Error(SeatFrameConnectionError);
TEMPERATURE_RANGE_ERROR = Error(TemperatureRangeError);
TEMPERATURE_RANGE_LIMIT_ERROR = Error(TemperatureRangeLimitError);
MEASUREMENT_RANGE_ERROR = Error(MeasurementRangeError);
CALIBRATION_DATA_ERROR = Error(CalibrationDataError);
SHORT_TO_UBAT_GND_ERROR = Error(ShortToUbatGndError);

//Error instantiation should in the order of their error code
system Scen1,Scen2,Scen3,Scen4,
VOLTAGE_LOW_ERROR,
ENV_Message, SYS_Message_Receiver, ScenarioGenerator;</system>
	<queries>
		<query>
			<formula>E&lt;&gt; VOLTAGE_LOW_ERROR.e0 == true &amp;&amp; VOLTAGE_LOW_ERROR.e1 == true &amp;&amp;  VOLTAGE_LOW_ERROR.e2 == true &amp;&amp;  VOLTAGE_LOW_ERROR.e3 == true &amp;&amp; VOLTAGE_LOW_ERROR.e4 == true &amp;&amp; VOLTAGE_LOW_ERROR.e5 == true
			</formula>
			<comment>
			</comment>
		</query>
	</queries>
</nta>
